<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBkAAAEAIAAMDQAAFgAAACgAAAAgAAAAMgAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QDo1p4A5c+MItm6
        eFzWs1hw1bJTcNWyU3DVslNw1bJTcNWyVHDVslRw1bJTcNWyVHDVslRw2LZVOvn05QDbvWpN1bJTcNWy
        U3DVslNw1bJTcNe2YnDYt25M8eW0EfLnwgD59OUA+fTlAPn05QD59OUA+fTlAPn05QD37tEA1K8wHNSx
        Yc7Jmgv+yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/TrlnB+fTlANe1
        Z4LImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/Lnyf+1rRmpufToA759OUA+fTlAPn05QD59OUA///qAODI
        k0jOpEb8yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/86k
        O/DjyoIA38N8RciZBP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/0KpV5OnZsx759OUA+fTlAPn0
        5QDfw28Vy54l6ciYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iY
        AP/ImAD/yJgA/+XQjjT89tcMzKAo/MiYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/z6U3vd/D
        cAD59OUA+fTlANWxXp3ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iY
        AP/ImAD/yJgA/8iYAP/ImAD/1bNfd+3drgDRqUzGyJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iY
        AP/ImAD/3L51YPn05QDewnEAzaM26MiYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8eX
        AP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/RqlK02MWLANOuU4DImAD/yJgA/8iYAP/ImAD/yJgA/8iY
        AP/ImAD/yJgA/8iYAP/PpkOl+fTlAPv01hXImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8ma
        Ev/QqUCR4cZ/WNe2aZXLnhv7yZoI/8eXAP/IlwD/yJgA/8ueLMv///8A38N6ItKtU7vImAX/yJgA/8iY
        AP/ImAD/yJgA/8iYAP/ImAD/yJgA/8+mTdLx5cAA+vTVE8mZAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iY
        AP/ImAD/0atFk93BZAD59OUA8+jJAN/CYw/QpiYU5c+cSNy/bFrQqC9a1bFZNomWswD59OUA///kAdGr
        TMvImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/z6ZK0PDkvgDiy4YA0KhJ+8iYAP/ImAD/yJgA/8iY
        AP/ImAD/yJgA/8iXAP/cv3Ng+fTlAPn05QD59OUA3b9cB+LJeRj27McR0qozAOLKfgDz6MYA+fTlAPn0
        5QD59OUA1rRrk8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/Rqkyv+fTlAPfsxwDSrFGfyJgA/8iY
        AP/ImAD/yJgA/8iYAP/ImAD/yJgA/8+mO5PZuVEA+fTlAKO52ADQpz17y54n/8yhO/rLnhnj0KhF49y/
        eV/TxZYA+fTlAAAAAADSrVXWyJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/9a1YGP59OUA+fTlAOXP
        ky3LniT7yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yZoO/9CoRJHfw3Uo0blpAM+nRLTImAD/yJgA/8iY
        AP/ImAD/zKE6+9i4aYDdwXJW069eu8iZDf/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/Rqk3h8+iwBPn0
        5QD59OUA586CANu9eVvKnB7/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/9KtU8js3aoA0qxHZciY
        AP/ImAD/yJgA/8iYAP/ImAD/yJgA/8eXAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/z6ZJ+9m6
        aiD59OUA+fTlAPn05QD59OUA9OrJAN/EhU/OpTrfyJkH/8iYAP/ImAD/yJgA/8iYAP/ImAD/y54k/fHk
        uBzs26geypsV/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yZoV/9Kt
        VMfgxoAk9uzNAPn05QD59OUA+fTlAPn05QD59OUA+fTlAP//5wXbvW5D0ak5Z8qcDGfQqUWbyJgA/8iY
        AP/ImAD/1rRbVerXnwDOpDvNyJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/yJgA/8qbGv/Sq0l6ypwKZ9Wx
        U2fhyYYy5c+PAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAN26
        AAHRq1DQyJgA/8iYAP/Rq1Cj///rANKtWIrImAD/yJgA/8iYAP/ImAD/yJgA/8iYAP/ImAD/2rx6oOfT
        mgD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAOzbpxPVsmPWyJgA/82iNO7WtFQA2bpkMMiXAP/ImAD/yJgA/8iYAP/ImAD/yJkA/9i5
        cqf///UB+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAOPLngDYuGt8zaM28Ny/dznjzJEAzqVF78iYAP/ImAD/yJgA/8+m
        O9/VslhP6dijAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAP//3gD17MYP6dadKfn05QDXtWB21bNntM6j
        KnPhyYtN2rxfAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn05QD59OUA+fTlAPn0
        5QD59OUA+fTlAPn05QD59OUA+fTlAP/////////////////////4ACAf4AAgB8AAIAOAAAADgAAQAYAA
        EAEAABABADgYAYA4/AGAOBwBgAgAAcAIAAPgAAAH8AQAH/8EAf//hAH//+IH///yH///////////////
        //8=
</value>
  </data>
</root>